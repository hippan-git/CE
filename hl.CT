<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"health"</Description>
      <VariableType>Float</VariableType>
      <Address>"hw.dll"+007BBD9C</Address>
      <Offsets>
        <Offset>1E0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"energy"</Description>
      <VariableType>Float</VariableType>
      <Address>"hw.dll"+007BBD9C</Address>
      <Offsets>
        <Offset>23c</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"velocity"</Description>
      <VariableType>Float</VariableType>
      <Address>"hw.dll"+007BBD9C</Address>
      <Offsets>
        <Offset>a8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"inf ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

hl.dll+4B3D0: //- dec edx (M5)
db 90
hl.dll+4B622:// - dec edi подствольник
nop
hl.dll+3A155:// - dec eax pistol
nop
hl.dll+34E06:// granade - dec edi
nop
hl.dll+75BA6:// shotgun - dec edx
nop
hl.dll+6CF13://revolver - dec edx
nop
hl.dll+85C81://laser bomb - dec ecx
nop
hl.dll+6FEE8://dist bomb
 db 90 90
hl.dll+1DBEA://row - dec eax
nop
hl.dll+6F09A://rocket - dec eax
nop
hl.dll+7B90E://bugs - dec ecx
nop
hl.dll+2595A://plazma - sub eax,edx
db 90 90
hl.dll+2FB10://lazer - add ecx,-02 { 254 }
db 90 90 90

[DISABLE]
hl.dll+4B3D0:
 dec edx
hl.dll+4B622:
 dec edi
hl.dll+3A155:
 dec eax
hl.dll+34E06:
 dec edi
hl.dll+75BA6:
 dec edx
hl.dll+6CF13:
 dec edx
hl.dll+85C81:
 dec ecx
hl.dll+6FEE8:
 dec [eax]
hl.dll+1DBEA:
 dec eax
hl.dll+6F09A:
 dec eax
hl.dll+7B90E:
 dec ecx
hl.dll+2595A:
 sub eax,edx

hl.dll+2FB10:
 add ecx,-02


</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"ohk"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-29
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(OHK,hl.dll,D8 64 24 64 D9 98 60 01 00 00) // should be unique
alloc(newmem,$1000)


label(code)
label(return)


newmem:
  push ebx
  mov ebx,["hw.dll"+007BBD9C]
  lea ebx,[ebx+80]
  cmp ebx,eax
  pop ebx
  je return
  code:
  fsub dword ptr [esp+64]

  fstp dword ptr [eax+00000160]
  mov [eax+00000160],(float)0
  jmp return

OHK:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:

registersymbol(OHK)

[DISABLE]

OHK:
  db D8 64 24 64 D9 98 60 01 00 00

unregistersymbol(OHK)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hl.dll"+18551

"hl.dll"+1852D: D9 44 24 30                    -  fld dword ptr [esp+30]
"hl.dll"+18531: D8 40 08                       -  fadd dword ptr [eax+08]
"hl.dll"+18534: 8B 4C 24 38                    -  mov ecx,[esp+38]
"hl.dll"+18538: 89 10                          -  mov [eax],edx
"hl.dll"+1853A: 89 48 04                       -  mov [eax+04],ecx
"hl.dll"+1853D: D9 5C 24 3C                    -  fstp dword ptr [esp+3C]
"hl.dll"+18541: 8B 54 24 3C                    -  mov edx,[esp+3C]
"hl.dll"+18545: 89 50 08                       -  mov [eax+08],edx
"hl.dll"+18548: 8B 46 04                       -  mov eax,[esi+04]
"hl.dll"+1854B: D9 80 60 01 00 00              -  fld dword ptr [eax+00000160]
// ---------- INJECTING HERE ----------
"hl.dll"+18551: D8 64 24 64                    -  fsub dword ptr [esp+64]
"hl.dll"+18555: D9 98 60 01 00 00              -  fstp dword ptr [eax+00000160]
// ---------- DONE INJECTING  ----------
"hl.dll"+1855B: 83 BE 6C 01 00 00 06           -  cmp dword ptr [esi+0000016C],06
"hl.dll"+18562: 75 1B                          -  jne hl.dll+1857F
"hl.dll"+18564: 8B 86 F0 00 00 00              -  mov eax,[esi+000000F0]
"hl.dll"+1856A: 80 CC 01                       -  or ah,01
"hl.dll"+1856D: 89 86 F0 00 00 00              -  mov [esi+000000F0],eax
"hl.dll"+18573: 33 C0                          -  xor eax,eax
"hl.dll"+18575: 5F                             -  pop edi
"hl.dll"+18576: 5E                             -  pop esi
"hl.dll"+18577: 5D                             -  pop ebp
"hl.dll"+18578: 5B                             -  pop ebx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"ohk gun"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-29
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(OHK_gun,hl.dll,D9 80 60 01 00 00 D8 64 24 10) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000160],(float)1
  fld dword ptr [eax+00000160]
  jmp return

OHK_gun:
  jmp newmem
  nop
return:
registersymbol(OHK_gun)

[DISABLE]

OHK_gun:
  db D9 80 60 01 00 00

unregistersymbol(OHK_gun)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hl.dll"+881AB

"hl.dll"+88185: 33 D2                 -  xor edx,edx
"hl.dll"+88187: 3B C2                 -  cmp eax,edx
"hl.dll"+88189: 75 1D                 -  jne hl.dll+881A8
"hl.dll"+8818B: C7 46 10 C0 6F A3 0F  -  mov [esi+10],hl.dll+86FC0
"hl.dll"+88192: 89 56 18              -  mov [esi+18],edx
"hl.dll"+88195: A1 F4 63 A8 0F        -  mov eax,[hl.dll+D63F4]
"hl.dll"+8819A: D9 00                 -  fld dword ptr [eax]
"hl.dll"+8819C: DC 05 58 25 A5 0F     -  fadd qword ptr [hl.dll+A2558]
"hl.dll"+881A2: D9 99 04 01 00 00     -  fstp dword ptr [ecx+00000104]
"hl.dll"+881A8: 8B 46 04              -  mov eax,[esi+04]
// ---------- INJECTING HERE ----------
"hl.dll"+881AB: D9 80 60 01 00 00     -  fld dword ptr [eax+00000160]
// ---------- DONE INJECTING  ----------
"hl.dll"+881B1: D8 64 24 10           -  fsub dword ptr [esp+10]
"hl.dll"+881B5: D9 98 60 01 00 00     -  fstp dword ptr [eax+00000160]
"hl.dll"+881BB: 8B 4E 04              -  mov ecx,[esi+04]
"hl.dll"+881BE: D9 81 60 01 00 00     -  fld dword ptr [ecx+00000160]
"hl.dll"+881C4: D8 1D 88 25 A5 0F     -  fcomp dword ptr [hl.dll+A2588]
"hl.dll"+881CA: DF E0                 -  fnstsw ax
"hl.dll"+881CC: F6 C4 41              -  test ah,41
"hl.dll"+881CF: 7A 64                 -  jp hl.dll+88235
"hl.dll"+881D1: 89 91 60 01 00 00     -  mov [ecx+00000160],edx
"hl.dll"+881D7: 8B 4E 04              -  mov ecx,[esi+04]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"ящики"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-29
  Author : Hipp

  One Hit kill для предметов
}

[ENABLE]

aobscanmodule(tara,hl.dll,D9 80 60 01 00 00 D8 E1) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000160],(float)1
  fld dword ptr [eax+00000160]
  jmp return

tara:
  jmp newmem
  nop
return:
registersymbol(tara)

[DISABLE]

tara:
  db D9 80 60 01 00 00

unregistersymbol(tara)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hl.dll"+2869F

"hl.dll"+28677: D9 5C 24 20              -  fstp dword ptr [esp+20]
"hl.dll"+2867B: 8B 44 24 18              -  mov eax,[esp+18]
"hl.dll"+2867F: 8B 4C 24 1C              -  mov ecx,[esp+1C]
"hl.dll"+28683: 8B 54 24 20              -  mov edx,[esp+20]
"hl.dll"+28687: A3 6C 61 A8 0F           -  mov [hl.dll+D616C],eax
"hl.dll"+2868C: 89 0D 70 61 A8 0F        -  mov [hl.dll+D6170],ecx
"hl.dll"+28692: 89 15 74 61 A8 0F        -  mov [hl.dll+D6174],edx
"hl.dll"+28698: 8B 46 04                 -  mov eax,[esi+04]
"hl.dll"+2869B: 8B CE                    -  mov ecx,esi
"hl.dll"+2869D: DD D8                    -  fstp st(0)
// ---------- INJECTING HERE ----------
"hl.dll"+2869F: D9 80 60 01 00 00        -  fld dword ptr [eax+00000160]
// ---------- DONE INJECTING  ----------
"hl.dll"+286A5: D8 E1                    -  fsub st(0),st(1)
"hl.dll"+286A7: D9 98 60 01 00 00        -  fstp dword ptr [eax+00000160]
"hl.dll"+286AD: 8B 46 04                 -  mov eax,[esi+04]
"hl.dll"+286B0: DD D8                    -  fstp st(0)
"hl.dll"+286B2: D9 80 60 01 00 00        -  fld dword ptr [eax+00000160]
"hl.dll"+286B8: D8 1D 88 25 A5 0F        -  fcomp dword ptr [hl.dll+A2588]
"hl.dll"+286BE: DF E0                    -  fnstsw ax
"hl.dll"+286C0: F6 C4 41                 -  test ah,41
"hl.dll"+286C3: 7A 1A                    -  jp hl.dll+286DF
"hl.dll"+286C5: 8B 16                    -  mov edx,[esi]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"пушки"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-30
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ohk_mech_gun,hl.dll,D9 81 60 01 00 00 D8 E1) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+00000160],(float)0.1
  fld dword ptr [ecx+00000160]
  jmp return

ohk_mech_gun:
  jmp newmem
  nop
return:
registersymbol(ohk_mech_gun)

[DISABLE]

ohk_mech_gun:
  db D9 81 60 01 00 00

unregistersymbol(ohk_mech_gun)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hl.dll"+87B4B

"hl.dll"+87B2B: 5E                       -  pop esi
"hl.dll"+87B2C: C2 10 00                 -  ret 0010
"hl.dll"+87B2F: 8B 86 BC 02 00 00        -  mov eax,[esi+000002BC]
"hl.dll"+87B35: 33 D2                    -  xor edx,edx
"hl.dll"+87B37: 3B C2                    -  cmp eax,edx
"hl.dll"+87B39: 75 0C                    -  jne hl.dll+87B47
"hl.dll"+87B3B: D9 44 24 10              -  fld dword ptr [esp+10]
"hl.dll"+87B3F: DC 0D 58 25 AD 0F        -  fmul qword ptr [hl.dll+A2558]
"hl.dll"+87B45: EB 04                    -  jmp hl.dll+87B4B
"hl.dll"+87B47: D9 44 24 10              -  fld dword ptr [esp+10]
// ---------- INJECTING HERE ----------
"hl.dll"+87B4B: D9 81 60 01 00 00        -  fld dword ptr [ecx+00000160]
// ---------- DONE INJECTING  ----------
"hl.dll"+87B51: D8 E1                    -  fsub st(0),st(1)
"hl.dll"+87B53: D9 99 60 01 00 00        -  fstp dword ptr [ecx+00000160]
"hl.dll"+87B59: 8B 4E 04                 -  mov ecx,[esi+04]
"hl.dll"+87B5C: DD D8                    -  fstp st(0)
"hl.dll"+87B5E: D9 81 60 01 00 00        -  fld dword ptr [ecx+00000160]
"hl.dll"+87B64: D8 1D 88 25 AD 0F        -  fcomp dword ptr [hl.dll+A2588]
"hl.dll"+87B6A: DF E0                    -  fnstsw ax
"hl.dll"+87B6C: F6 C4 41                 -  test ah,41
"hl.dll"+87B6F: 7A 63                    -  jp hl.dll+87BD4
"hl.dll"+87B71: 89 91 60 01 00 00        -  mov [ecx+00000160],edx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"вертолет"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-30
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(OHK_helli,hl.dll,D9 80 60 01 00 00 D8 64) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [eax+00000160],(float)1
code:
  fld dword ptr [eax+00000160]
  jmp return

OHK_helli:
  jmp newmem
  nop
return:
registersymbol(OHK_helli)

[DISABLE]

OHK_helli:
  db D9 80 60 01 00 00

unregistersymbol(OHK_helli)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hl.dll"+13716

"hl.dll"+136FC: 8B 4F 04                       -  mov ecx,[edi+04]
"hl.dll"+136FF: 8B 10                          -  mov edx,[eax]
"hl.dll"+13701: 83 C1 20                       -  add ecx,20
"hl.dll"+13704: 89 11                          -  mov [ecx],edx
"hl.dll"+13706: 8B 50 04                       -  mov edx,[eax+04]
"hl.dll"+13709: 89 51 04                       -  mov [ecx+04],edx
"hl.dll"+1370C: 8B 40 08                       -  mov eax,[eax+08]
"hl.dll"+1370F: 89 41 08                       -  mov [ecx+08],eax
"hl.dll"+13712: 8B 47 04                       -  mov eax,[edi+04]
"hl.dll"+13715: 5E                             -  pop esi
// ---------- INJECTING HERE ----------
"hl.dll"+13716: D9 80 60 01 00 00              -  fld dword ptr [eax+00000160]
// ---------- DONE INJECTING  ----------
"hl.dll"+1371C: D8 64 24 38                    -  fsub dword ptr [esp+38]
"hl.dll"+13720: D9 98 60 01 00 00              -  fstp dword ptr [eax+00000160]
"hl.dll"+13726: 8B 4F 04                       -  mov ecx,[edi+04]
"hl.dll"+13729: D9 81 60 01 00 00              -  fld dword ptr [ecx+00000160]
"hl.dll"+1372F: D8 1D 88 25 5E 0D              -  fcomp dword ptr [hl.dll+A2588]
"hl.dll"+13735: DF E0                          -  fnstsw ax
"hl.dll"+13737: F6 C4 41                       -  test ah,41
"hl.dll"+1373A: 7A 14                          -  jp hl.dll+13750
"hl.dll"+1373C: 8B 17                          -  mov edx,[edi]
"hl.dll"+1373E: 6A 00                          -  push 00
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"super jump"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hl.exe
  Version: 
  Date   : 2018-10-29
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(jump,hw.dll,89 82 A8 00 00 00 8B) // should be unique
alloc(newmem,$1000)
alloc(flag1,$4)
alloc(flag2,$4)

label(code)
label(return)
label(slow_down)
label(decrem)
label(func)


newmem:
  cmp eax,0
  je code
  cmp [decrem],1
  mov  dword ptr[decrem],0
  je slow_down
  jmp code
  {mov [flag1],eax
  mov [flag2],(float)0
  fld dword ptr [flag1]
  fld dword ptr [flag2]
  fcomip st,st(1)
  jl code

  mov [flag1],eax
  mov [flag2],(float)1.5

  fmul dword ptr [flag2]
  fstp dword ptr [flag1]
  mov eax,[flag1]
  jmp code
}
slow_down:
  mov eax,(float)1500

code:

  mov [edx+000000A8],eax
  cmp eax,0
  je func
  jmp return

func:
mov dword ptr [decrem],1
jmp return

decrem:
dw #10


jump:
  jmp newmem
  nop
return:

registersymbol(jump)
registersymbol(decrem)

[DISABLE]

jump:
  db 89 82 A8 00 00 00
unregistersymbol(decrem)
unregistersymbol(jump)
dealloc(newmem)
dealloc(flag1)
dealloc(flag2)

{
// ORIGINAL CODE - INJECTION POINT: "hw.dll"+C1E88

"hw.dll"+C1E51: 83 C4 0C              -  add esp,0C
"hw.dll"+C1E54: E9 1F FF FF FF        -  jmp hw.dll+C1D78
"hw.dll"+C1E59: 8B 0D 9C BD 1D 05     -  mov ecx,[hw.dll+7BBD9C]
"hw.dll"+C1E5F: 8B 95 74 FF FF FF     -  mov edx,[ebp-0000008C]
"hw.dll"+C1E65: 89 91 A0 00 00 00     -  mov [ecx+000000A0],edx
"hw.dll"+C1E6B: A1 9C BD 1D 05        -  mov eax,[hw.dll+7BBD9C]
"hw.dll"+C1E70: 8B 8D 78 FF FF FF     -  mov ecx,[ebp-00000088]
"hw.dll"+C1E76: 89 88 A4 00 00 00     -  mov [eax+000000A4],ecx
"hw.dll"+C1E7C: 8B 15 9C BD 1D 05     -  mov edx,[hw.dll+7BBD9C]
"hw.dll"+C1E82: 8B 85 7C FF FF FF     -  mov eax,[ebp-00000084]
// ---------- INJECTING HERE ----------
"hw.dll"+C1E88: 89 82 A8 00 00 00     -  mov [edx+000000A8],eax
// ---------- DONE INJECTING  ----------
"hw.dll"+C1E8E: 8B 0D 3C 34 4A 05     -  mov ecx,[hw.dll+A8343C]
"hw.dll"+C1E94: DD 81 B8 25 00 00     -  fld qword ptr [ecx+000025B8]
"hw.dll"+C1E9A: D9 1D E0 D0 1E 05     -  fstp dword ptr [hw.dll+7CD0E0]
"hw.dll"+C1EA0: 8B 55 FC              -  mov edx,[ebp-04]
"hw.dll"+C1EA3: 89 15 E4 D0 1E 05     -  mov [hw.dll+7CD0E4],edx
"hw.dll"+C1EA9: A1 9C BD 1D 05        -  mov eax,[hw.dll+7BBD9C]
"hw.dll"+C1EAE: 50                    -  push eax
"hw.dll"+C1EAF: FF 15 40 B6 1D 05     -  call dword ptr [hw.dll+7BB640]
"hw.dll"+C1EB5: 83 C4 04              -  add esp,04
"hw.dll"+C1EB8: 8B 0D 9C BD 1D 05     -  mov ecx,[hw.dll+7BBD9C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Нет описания"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>decrem</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="безымянная структура" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="8" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="52" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Целое без знака"/>
        <Element Offset="124" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="132" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="136" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="148" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Целое без знака"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="172" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="196" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="200" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="204" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="212" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="216" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Целое без знака"/>
        <Element Offset="244" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="252" Vartype="4 Bytes" Bytesize="4" RLECount="15" DisplayMethod="Целое без знака"/>
        <Element Offset="312" Vartype="Pointer" Bytesize="4" RLECount="3" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="324" Vartype="Float" Bytesize="4" RLECount="15" DisplayMethod="Целое без знака"/>
        <Element Offset="384" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="408" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="416" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="420" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="432" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="444" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="480" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="484" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="488" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="496" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="508" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="512" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="520" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="528" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="540" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="544" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="560" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="564" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="572" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="576" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="592" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="604" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="612" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="636" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="640" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="648" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="652" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="928" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="932" Vartype="4 Bytes" Bytesize="4" RLECount="65" DisplayMethod="Целое без знака"/>
        <Element Offset="1192" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1196" Vartype="4 Bytes" Bytesize="4" RLECount="64" DisplayMethod="Целое без знака"/>
        <Element Offset="1452" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1456" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="1732" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1740" Vartype="4 Bytes" Bytesize="4" RLECount="101" DisplayMethod="Целое без знака"/>
        <Element Offset="2144" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2148" Vartype="4 Bytes" Bytesize="4" RLECount="27" DisplayMethod="Целое без знака"/>
        <Element Offset="2256" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2260" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="2536" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2544" Vartype="4 Bytes" Bytesize="4" RLECount="101" DisplayMethod="Целое без знака"/>
        <Element Offset="2948" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2952" Vartype="4 Bytes" Bytesize="4" RLECount="27" DisplayMethod="Целое без знака"/>
        <Element Offset="3060" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3064" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="3340" Vartype="Pointer" Bytesize="4" RLECount="2" PointerSize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3348" Vartype="4 Bytes" Bytesize="4" RLECount="101" DisplayMethod="Целое без знака"/>
        <Element Offset="3752" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3756" Vartype="4 Bytes" Bytesize="4" RLECount="27" DisplayMethod="Целое без знака"/>
        <Element Offset="3864" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3868" Vartype="4 Bytes" Bytesize="4" RLECount="57" DisplayMethod="Целое без знака"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
