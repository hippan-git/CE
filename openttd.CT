<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Налог"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
openttd.exe+381C7B:
 add r8,rax //налог в плюсе

 
[DISABLE]
openttd.exe+381C7B:
 sub r8,rax

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"fast load #FIX IT"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : openttd.exe
  Version: 
  Date   : 2021-12-06
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(fast_build,openttd.exe,01 48 0C 66 39 68 10) // should be unique
alloc(newmem,$1000,"openttd.exe"+620C23)

label(code)
label(return)

newmem:
  imul ecx,2
code:
  add [rax+0C],ecx
  cmp [rax+10],bp
  jmp return

fast_build:
  jmp newmem
  nop 2
return:
registersymbol(fast_build)

[DISABLE]

fast_build:
  db 01 48 0C 66 39 68 10

unregistersymbol(fast_build)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "openttd.exe"+620C23

"openttd.exe"+620BF4: 48 8B 05 A5 11 CA 01  -  mov rax,[openttd.exe+22C1DA0]
"openttd.exe"+620BFB: 48 83 C0 EC           -  add rax,-14
"openttd.exe"+620BFF: 40 88 38              -  mov [rax],dil
"openttd.exe"+620C02: 89 70 04              -  mov [rax+04],esi
"openttd.exe"+620C05: 4C 89 70 08           -  mov [rax+08],r14
"openttd.exe"+620C09: 66 89 68 10           -  mov [rax+10],bp
"openttd.exe"+620C0D: 0F B7 8B 26 01 00 00  -  movzx ecx,word ptr [rbx+00000126]
"openttd.exe"+620C14: 01 48 08              -  add [rax+08],ecx
"openttd.exe"+620C17: 8B 8B 30 01 00 00     -  mov ecx,[rbx+00000130]
"openttd.exe"+620C1D: 2B 8B 5C 01 00 00     -  sub ecx,[rbx+0000015C]
// ---------- INJECTING HERE ----------
"openttd.exe"+620C23: 01 48 0C              -  add [rax+0C],ecx
"openttd.exe"+620C26: 66 39 68 10           -  cmp [rax+10],bp
// ---------- DONE INJECTING  ----------
"openttd.exe"+620C2A: 75 23                 -  jne openttd.exe+620C4F
"openttd.exe"+620C2C: 44 39 B3 30 01 00 00  -  cmp [rbx+00000130],r14d
"openttd.exe"+620C33: 75 04                 -  jne openttd.exe+620C39
"openttd.exe"+620C35: 8B CD                 -  mov ecx,ebp
"openttd.exe"+620C37: EB 12                 -  jmp openttd.exe+620C4B
"openttd.exe"+620C39: 48 8B 8B 38 01 00 00  -  mov rcx,[rbx+00000138]
"openttd.exe"+620C40: 48 8B 11              -  mov rdx,[rcx]
"openttd.exe"+620C43: 48 8B 4A 10           -  mov rcx,[rdx+10]
"openttd.exe"+620C47: 0F B7 49 16           -  movzx ecx,word ptr [rcx+16]
"openttd.exe"+620C4B: 66 89 48 10           -  mov [rax+10],cx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"resource"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : openttd.exe
  Version: 
  Date   : 2021-12-06
  Author : Hipp

  количество добываемого ресурса
}

[ENABLE]

aobscanmodule(resource,openttd.exe,66 01 41 10 48 83 C2 08) // should be unique
alloc(newmem,$1000,"openttd.exe"+37683B)

label(code)
label(return)

newmem:
  mov ax,#30
code:
  add [rcx+10],ax
  add rdx,08
  jmp return

resource:
  jmp newmem
  nop 3
return:
registersymbol(resource)

[DISABLE]

resource:
  db 66 01 41 10 48 83 C2 08

unregistersymbol(resource)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "openttd.exe"+37683B

"openttd.exe"+37681F: 48 B9 00 00 00 00 00 00 00 80  -  mov rcx,8000000000000000
"openttd.exe"+376829: EB BC                          -  jmp openttd.exe+3767E7
"openttd.exe"+37682B: CC                             -  int 3 
"openttd.exe"+37682C: CC                             -  int 3 
"openttd.exe"+37682D: CC                             -  int 3 
"openttd.exe"+37682E: CC                             -  int 3 
"openttd.exe"+37682F: CC                             -  int 3 
"openttd.exe"+376830: 48 83 EC 28                    -  sub rsp,28
"openttd.exe"+376834: 0F B7 42 10                    -  movzx eax,word ptr [rdx+10]
"openttd.exe"+376838: 4C 8B DA                       -  mov r11,rdx
// ---------- INJECTING HERE ----------
"openttd.exe"+37683B: 66 01 41 10                    -  add [rcx+10],ax
"openttd.exe"+37683F: 48 83 C2 08                    -  add rdx,08
// ---------- DONE INJECTING  ----------
"openttd.exe"+376843: 48 83 C1 08                    -  add rcx,08
"openttd.exe"+376847: E8 C4 69 D4 FF                 -  call openttd.exe+BD210
"openttd.exe"+37684C: 41 8B 13                       -  mov edx,[r11]
"openttd.exe"+37684F: 48 83 C4 28                    -  add rsp,28
"openttd.exe"+376853: E9 A8 27 00 00                 -  jmp openttd.exe+379000
"openttd.exe"+376858: CC                             -  int 3 
"openttd.exe"+376859: CC                             -  int 3 
"openttd.exe"+37685A: CC                             -  int 3 
"openttd.exe"+37685B: CC                             -  int 3 
"openttd.exe"+37685C: CC                             -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Нет описания"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>0B5BADD8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"abs"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : openttd.exe
  Version: 
  Date   : 2022-01-15
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(abs_money,openttd.exe,48 8B 42 08 48 8B FA 48 8B D9 48 85) // should be unique
alloc(code,$1000,"openttd.exe"+381C1A)

label(newcode)
label(return)


code:
  mov rax,[rdx+08]
  mov rdi,rdx
newcode:
  push rbx
  mov rbx,#9000
  shl, rbx,2 //1f уводит в минус
  or rax,rbx
  pop rbx
  jmp return

abs_money:
  jmp code
  nop 2
return:
registersymbol(abs_money)

[DISABLE]

abs_money:
  db 48 8B 42 08 48 8B FA

unregistersymbol(abs_money)
dealloc(code)

{
// ORIGINAL CODE - INJECTION POINT: "openttd.exe"+381C1A

"openttd.exe"+381BFC: 32 C0                          -  xor al,al
"openttd.exe"+381BFE: 41 C6 40 14 00                 -  mov byte ptr [r8+14],00
"openttd.exe"+381C03: 41 C7 40 10 1D 0E 00 00        -  mov [r8+10],00000E1D
"openttd.exe"+381C0B: C3                             -  ret 
"openttd.exe"+381C0C: B0 01                          -  mov al,01
"openttd.exe"+381C0E: C3                             -  ret 
"openttd.exe"+381C0F: CC                             -  int 3 
"openttd.exe"+381C10: 48 89 5C 24 18                 -  mov [rsp+18],rbx
"openttd.exe"+381C15: 57                             -  push rdi
"openttd.exe"+381C16: 48 83 EC 20                    -  sub rsp,20
// ---------- INJECTING HERE ----------
"openttd.exe"+381C1A: 48 8B 42 08                    -  mov rax,[rdx+08]
"openttd.exe"+381C1E: 48 8B FA                       -  mov rdi,rdx
// ---------- DONE INJECTING  ----------
"openttd.exe"+381C21: 48 8B D9                       -  mov rbx,rcx
"openttd.exe"+381C24: 48 85 C0                       -  test rax,rax
"openttd.exe"+381C27: 0F 84 33 01 00 00              -  je openttd.exe+381D60
"openttd.exe"+381C2D: 4C 8B 41 58                    -  mov r8,[rcx+58]
"openttd.exe"+381C31: 49 BB FF FF FF FF FF FF FF 7F  -  mov r11,7FFFFFFFFFFFFFFF
"openttd.exe"+381C3B: 48 89 74 24 30                 -  mov [rsp+30],rsi
"openttd.exe"+381C40: 48 BE 00 00 00 00 00 00 00 80  -  mov rsi,8000000000000000
"openttd.exe"+381C4A: 4D 85 C0                       -  test r8,r8
"openttd.exe"+381C4D: 7E 13                          -  jle openttd.exe+381C62
"openttd.exe"+381C4F: 48 85 C0                       -  test rax,rax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Нет описания"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>0A6E1848</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>отображаемы деньги это адрес в 80 кратном увеличении
</Comments>
</CheatTable>
