<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"cubes"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Monopoly.exe (остановлен)
  Version: 
  Date   : 2020-10-08
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(cubes,Monopoly.exe,8B 8E 90 1A 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(cube1)
registersymbol(cube2)
registersymbol(init)
newmem:
  cmp dword ptr[init],0
  je write_first
L1:
  cmp esi,[init]
  jne write_second
  mov ecx,[cube1]
L2:
  jmp return
code:
  mov ecx,[esi+00001A90]
  jmp newmem
  jmp return
write_first:
  mov [init],esi
  jmp L1
write_second:
  mov ecx,[cube2]
  jmp L2
cube1:
  dd 01
cube2:
  dd 01
init:
  dd 00
cubes:
  jmp code
  nop
return:
registersymbol(cubes)

[DISABLE]

cubes:
  db 8B 8E 90 1A 00 00
unregistersymbol(cube1)
unregistersymbol(cube2)
unregistersymbol(init)
unregistersymbol(cubes)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Monopoly.exe"+4C21C2

"Monopoly.exe"+4C21AD: CC                       -  int 3 
"Monopoly.exe"+4C21AE: CC                       -  int 3 
"Monopoly.exe"+4C21AF: CC                       -  int 3 
"Monopoly.exe"+4C21B0: 55                       -  push ebp
"Monopoly.exe"+4C21B1: 8B EC                    -  mov ebp,esp
"Monopoly.exe"+4C21B3: 56                       -  push esi
"Monopoly.exe"+4C21B4: 8B F1                    -  mov esi,ecx
"Monopoly.exe"+4C21B6: 80 BE 8D 1A 00 00 00     -  cmp byte ptr [esi+00001A8D],00
"Monopoly.exe"+4C21BD: 74 12                    -  je Monopoly.exe+4C21D1
"Monopoly.exe"+4C21BF: 8B 45 08                 -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
"Monopoly.exe"+4C21C2: 8B 8E 90 1A 00 00        -  mov ecx,[esi+00001A90]
// ---------- DONE INJECTING  ----------
"Monopoly.exe"+4C21C8: 89 08                    -  mov [eax],ecx
"Monopoly.exe"+4C21CA: B0 01                    -  mov al,01
"Monopoly.exe"+4C21CC: 5E                       -  pop esi
"Monopoly.exe"+4C21CD: 5D                       -  pop ebp
"Monopoly.exe"+4C21CE: C2 04 00                 -  ret 0004
"Monopoly.exe"+4C21D1: 80 BE CF 07 00 00 00     -  cmp byte ptr [esi+000007CF],00
"Monopoly.exe"+4C21D8: 74 10                    -  je Monopoly.exe+4C21EA
"Monopoly.exe"+4C21DA: E8 D1 0C FD FF           -  call Monopoly.exe+492EB0
"Monopoly.exe"+4C21DF: 84 C0                    -  test al,al
"Monopoly.exe"+4C21E1: 74 07                    -  je Monopoly.exe+4C21EA
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"cube1"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>cube1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"cube2"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>cube2</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"init"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>init</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Аукцион"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Monopoly.exe
  Version: 
  Date   : 2020-10-09
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(aukcion,Monopoly.exe,89 81 B0 00 00 00 5D C2 04 00 55 8B EC 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(auc_var)
newmem:
  mov [auc_var],ecx
code:
  mov [ecx+000000B0],eax
  jmp return
rent_var:
  dd 0
auc_var:
  dd 0
aukcion:
  jmp newmem
  nop
return:
registersymbol(aukcion)

[DISABLE]

aukcion:
  db 89 81 B0 00 00 00

unregistersymbol(auc_var)
unregistersymbol(aukcion)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Monopoly.exe"+3D0A56

"Monopoly.exe"+3D0A49: CC                 -  int 3 
"Monopoly.exe"+3D0A4A: CC                 -  int 3 
"Monopoly.exe"+3D0A4B: CC                 -  int 3 
"Monopoly.exe"+3D0A4C: CC                 -  int 3 
"Monopoly.exe"+3D0A4D: CC                 -  int 3 
"Monopoly.exe"+3D0A4E: CC                 -  int 3 
"Monopoly.exe"+3D0A4F: CC                 -  int 3 
"Monopoly.exe"+3D0A50: 55                 -  push ebp
"Monopoly.exe"+3D0A51: 8B EC              -  mov ebp,esp
"Monopoly.exe"+3D0A53: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
"Monopoly.exe"+3D0A56: 89 81 B0 00 00 00  -  mov [ecx+000000B0],eax
// ---------- DONE INJECTING  ----------
"Monopoly.exe"+3D0A5C: 5D                 -  pop ebp
"Monopoly.exe"+3D0A5D: C2 04 00           -  ret 0004
"Monopoly.exe"+3D0A60: 55                 -  push ebp
"Monopoly.exe"+3D0A61: 8B EC              -  mov ebp,esp
"Monopoly.exe"+3D0A63: 8B 55 08           -  mov edx,[ebp+08]
"Monopoly.exe"+3D0A66: 8B 02              -  mov eax,[edx]
"Monopoly.exe"+3D0A68: 89 81 30 01 00 00  -  mov [ecx+00000130],eax
"Monopoly.exe"+3D0A6E: 8B 42 04           -  mov eax,[edx+04]
"Monopoly.exe"+3D0A71: 89 81 34 01 00 00  -  mov [ecx+00000134],eax
"Monopoly.exe"+3D0A77: 5D                 -  pop ebp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Нет описания"</Description>
          <LastState Value="0" RealAddress="2D9AADB0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>auc_var</Address>
          <Offsets>
            <Offset>b0</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>65</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>83</Key>
              </Keys>
              <Value>500</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Налог"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Monopoly.exe
  Version: 
  Date   : 2021-04-24
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(nalog,Monopoly.exe,8B 45 08 89 41 60 5D C2 04 00 CC CC CC 55 8B EC 8B 45 08 89 41 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(nal_add)

newmem:
  mov [nal_add],ecx
code:
  mov eax,[ebp+08]
  mov [ecx+60],eax
  jmp return
nal_add:
  dd 0
nalog:
  jmp newmem
  nop
return:
registersymbol(nalog)

[DISABLE]

nalog:
  db 8B 45 08 89 41 60
unregistersymbol(nal_add)
unregistersymbol(nalog)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Monopoly.exe"+1C6B73

"Monopoly.exe"+1C6B61: 8B EC              -  mov ebp,esp
"Monopoly.exe"+1C6B63: 8A 45 08           -  mov al,[ebp+08]
"Monopoly.exe"+1C6B66: 88 41 64           -  mov [ecx+64],al
"Monopoly.exe"+1C6B69: 5D                 -  pop ebp
"Monopoly.exe"+1C6B6A: C2 04 00           -  ret 0004
"Monopoly.exe"+1C6B6D: CC                 -  int 3 
"Monopoly.exe"+1C6B6E: CC                 -  int 3 
"Monopoly.exe"+1C6B6F: CC                 -  int 3 
"Monopoly.exe"+1C6B70: 55                 -  push ebp
"Monopoly.exe"+1C6B71: 8B EC              -  mov ebp,esp
// ---------- INJECTING HERE ----------
"Monopoly.exe"+1C6B73: 8B 45 08           -  mov eax,[ebp+08]
"Monopoly.exe"+1C6B76: 89 41 60           -  mov [ecx+60],eax
// ---------- DONE INJECTING  ----------
"Monopoly.exe"+1C6B79: 5D                 -  pop ebp
"Monopoly.exe"+1C6B7A: C2 04 00           -  ret 0004
"Monopoly.exe"+1C6B7D: CC                 -  int 3 
"Monopoly.exe"+1C6B7E: CC                 -  int 3 
"Monopoly.exe"+1C6B7F: CC                 -  int 3 
"Monopoly.exe"+1C6B80: 55                 -  push ebp
"Monopoly.exe"+1C6B81: 8B EC              -  mov ebp,esp
"Monopoly.exe"+1C6B83: 8B 45 08           -  mov eax,[ebp+08]
"Monopoly.exe"+1C6B86: 89 41 68           -  mov [ecx+68],eax
"Monopoly.exe"+1C6B89: 5D                 -  pop ebp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Нет описания"</Description>
          <LastState Value="10" RealAddress="2D5880F0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>nal_add</Address>
          <Offsets>
            <Offset>60</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Monopoly.exe+3D0A56 - mov [ecx+000000B0],eax - ставки аукциона
Monopoly.exe+4B05FF - mov [esi+00000168],edi - сделка
///Monopoly.exe+1753C6 - mov [ecx+04],eax - дома на секторе
Monopoly.exe+174CD0 - mov eax,[ecx+04] - дома на секторе
Monopoly.exe+4C21C2 - mov ecx,[esi+00001A90] - левый кубик
Monopoly.exe+1C6B76 - mov [ecx+60],eax - налоги
</Comments>
</CheatTable>
