<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Нет описания"</Description>
      <LastState Value="1560" RealAddress="02F110D8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Heroes3.exe+2992D4</Address>
      <Offsets>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Нет описания"</Description>
      <LastState Value="0" RealAddress="0402E8F0"/>
      <VariableType>4 Bytes</VariableType>
      <Address>0402E8F0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"move"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-02
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(move,Heroes3.exe,8B 96 F0 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov dword ptr [eax+4D],#5000
code:
  mov edx,[esi+000001F0]
  jmp return

move:
  jmp newmem
  nop
return:
registersymbol(move)

[DISABLE]

move:
  db 8B 96 F0 01 00 00

unregistersymbol(move)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+19494

"Heroes3.exe"+1947C: 66 89 4D FA                    -  mov [ebp-06],cx
"Heroes3.exe"+19480: 8B 4E 50                       -  mov ecx,[esi+50]
"Heroes3.exe"+19483: 85 C9                          -  test ecx,ecx
"Heroes3.exe"+19485: 75 04                          -  jne Heroes3.exe+1948B
"Heroes3.exe"+19487: 6A 00                          -  push 00
"Heroes3.exe"+19489: EB 09                          -  jmp Heroes3.exe+19494
"Heroes3.exe"+1948B: 8B 4E 54                       -  mov ecx,[esi+54]
"Heroes3.exe"+1948E: 85 C9                          -  test ecx,ecx
"Heroes3.exe"+19490: 75 2E                          -  jne Heroes3.exe+194C0
"Heroes3.exe"+19492: 6A 01                          -  push 01
// ---------- INJECTING HERE ----------
"Heroes3.exe"+19494: 8B 96 F0 01 00 00              -  mov edx,[esi+000001F0]
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+1949A: 8B 48 4D                       -  mov ecx,[eax+4D]
"Heroes3.exe"+1949D: 83 FA 08                       -  cmp edx,08
"Heroes3.exe"+194A0: 51                             -  push ecx
"Heroes3.exe"+194A1: 8B 4D 08                       -  mov ecx,[ebp+08]
"Heroes3.exe"+194A4: 6A 00                          -  push 00
"Heroes3.exe"+194A6: 0F 94 C2                       -  sete dl
"Heroes3.exe"+194A9: 52                             -  push edx
"Heroes3.exe"+194AA: 8B 55 F8                       -  mov edx,[ebp-08]
"Heroes3.exe"+194AD: 68 5F EA 00 00                 -  push 0000EA5F
"Heroes3.exe"+194B2: 51                             -  push ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"inf monster"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Heroes3.exe+49E1D:
 add eax,edx

 
 
[DISABLE]
Heroes3.exe+49E1D:
 sub eax,edx

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"monster in town"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-03
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(monser_town,HD_SOD.dll,0F B7 54 48 16 89) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ebx
  movzx ebx,word ptr [eax+ecx*2+16]
  test ebx,ebx
  jne code
  mov word ptr [eax+ecx*2+16],1

code:
  pop ebx
  movzx edx,word ptr [eax+ecx*2+16]
  jmp return

monser_town:
  jmp newmem
return:
registersymbol(monser_town)

[DISABLE]

monser_town:
  db 0F B7 54 48 16

unregistersymbol(monser_town)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "HD_SOD.dll"+BFB8

"HD_SOD.dll"+BF90: 0F B6 4D FE           -  movzx ecx,byte ptr [ebp-02]
"HD_SOD.dll"+BF94: 03 C8                 -  add ecx,eax
"HD_SOD.dll"+BF96: 8B 15 82 AA 47 00     -  mov edx,[Heroes3.exe+7AA82]
"HD_SOD.dll"+BF9C: 8B 04 8A              -  mov eax,[edx+ecx*4]
"HD_SOD.dll"+BF9F: 89 85 18 FF FF FF     -  mov [ebp-000000E8],eax
"HD_SOD.dll"+BFA5: 8B 8D 18 FF FF FF     -  mov ecx,[ebp-000000E8]
"HD_SOD.dll"+BFAB: 89 4D A8              -  mov [ebp-58],ecx
"HD_SOD.dll"+BFAE: 8B 55 0C              -  mov edx,[ebp+0C]
"HD_SOD.dll"+BFB1: 8B 42 38              -  mov eax,[edx+38]
"HD_SOD.dll"+BFB4: 0F B6 4D FE           -  movzx ecx,byte ptr [ebp-02]
// ---------- INJECTING HERE ----------
"HD_SOD.dll"+BFB8: 0F B7 54 48 16        -  movzx edx,word ptr [eax+ecx*2+16]
// ---------- DONE INJECTING  ----------
"HD_SOD.dll"+BFBD: 89 95 50 FF FF FF     -  mov [ebp-000000B0],edx
"HD_SOD.dll"+BFC3: 83 7D 88 00           -  cmp dword ptr [ebp-78],00
"HD_SOD.dll"+BFC7: 74 43                 -  je HD_SOD.dll+C00C
"HD_SOD.dll"+BFC9: 68 68 8E 75 00        -  push HD_SOD.dll+88E68
"HD_SOD.dll"+BFCE: 68 78 8E 75 00        -  push HD_SOD.dll+88E78
"HD_SOD.dll"+BFD3: 68 58 8E 75 00        -  push HD_SOD.dll+88E58
"HD_SOD.dll"+BFD8: 8B 0D 14 55 76 00     -  mov ecx,[HD_SOD.dll+95514]
"HD_SOD.dll"+BFDE: E8 9D 80 FF FF        -  call HD_SOD.dll+4080
"HD_SOD.dll"+BFE3: 8B 08                 -  mov ecx,[eax]
"HD_SOD.dll"+BFE5: E8 B6 9D FF FF        -  call HD_SOD.dll+5DA0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"авт хар-ка в битве"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-02
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(char_in_fight,Heroes3.exe,8B 4D FC 33 DB) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov dword ptr [esi+50],#500
  mov dword ptr [esi+54],#500
  mov dword ptr [esi+58],#500
  mov dword ptr [esi+5c],#500
  mov dword ptr [esi+60],#500
  mov dword ptr [esi+64],#500
code:
  mov ecx,[ebp-04]
  xor ebx,ebx
  jmp return

char_in_fight:
  jmp newmem
return:
registersymbol(char_in_fight)

[DISABLE]

char_in_fight:
  db 8B 4D FC 33 DB

unregistersymbol(char_in_fight)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+E666D

"Heroes3.exe"+E664F: 84 C0                 -  test al,al
"Heroes3.exe"+E6651: 74 03                 -  je Heroes3.exe+E6656
"Heroes3.exe"+E6653: 83 C7 02              -  add edi,02
"Heroes3.exe"+E6656: 8B 43 1A              -  mov eax,[ebx+1A]
"Heroes3.exe"+E6659: 8D 14 80              -  lea edx,[eax+eax*4]
"Heroes3.exe"+E665C: A1 80 9C 67 00        -  mov eax,[Heroes3.exe+279C80]
"Heroes3.exe"+E6661: 83 3C D0 05           -  cmp dword ptr [eax+edx*8],05
"Heroes3.exe"+E6665: 75 03                 -  jne Heroes3.exe+E666A
"Heroes3.exe"+E6667: 83 C7 02              -  add edi,02
"Heroes3.exe"+E666A: 01 7E 50              -  add [esi+50],edi
// ---------- INJECTING HERE ----------
"Heroes3.exe"+E666D: 8B 4D FC              -  mov ecx,[ebp-04]
"Heroes3.exe"+E6670: 33 DB                 -  xor ebx,ebx
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+E6672: 33 C0                 -  xor eax,eax
"Heroes3.exe"+E6674: 81 C1 2D 01 00 00     -  add ecx,0000012D
"Heroes3.exe"+E667A: 83 39 5E              -  cmp dword ptr [ecx],5E
"Heroes3.exe"+E667D: 74 33                 -  je Heroes3.exe+E66B2
"Heroes3.exe"+E667F: 40                    -  inc eax
"Heroes3.exe"+E6680: 83 C1 08              -  add ecx,08
"Heroes3.exe"+E6683: 83 F8 13              -  cmp eax,13
"Heroes3.exe"+E6686: 7C F2                 -  jl Heroes3.exe+E667A
"Heroes3.exe"+E6688: 8B 15 68 0B 66 00     -  mov edx,[Heroes3.exe+260B68]
"Heroes3.exe"+E668E: 8B 82 D8 0B 00 00     -  mov eax,[edx+00000BD8]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"build"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Heroes3.exe+612F5:
 jmp Heroes3.exe+61305

 
 
[DISABLE]
Heroes3.exe+612F5:
 je Heroes3.exe+61305

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"хар в битве"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-03
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(char_onclick,Heroes3.exe,8B 47 4C 8A 55 17) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ebx
  mov ebx,[var_char]
  mov dword ptr [edi+000000C4],ebx
  mov dword ptr [edi+000000C8],ebx
  mov dword ptr [edi+000000Cc],ebx
  mov dword ptr [edi+000000d0],ebx
  mov dword ptr [edi+000000d4],ebx
  mov dword ptr [edi+000000d8],ebx
  pop ebx
code:
  mov eax,[edi+4C]
  mov dl,[ebp+17]
  jmp return
var_char:
  dd #500
char_onclick:
  jmp newmem
  nop
return:
registersymbol(char_onclick)
registersymbol(var_char)

[DISABLE]

char_onclick:
  db 8B 47 4C 8A 55 17

unregistersymbol(char_onclick)
unregistersymbol(var_char)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+1F3753

"Heroes3.exe"+1F3733: 51                    -  push ecx
"Heroes3.exe"+1F3734: 8B CE                 -  mov ecx,esi
"Heroes3.exe"+1F3736: 89 75 D0              -  mov [ebp-30],esi
"Heroes3.exe"+1F3739: E8 61 D9 DE FF        -  call 003E109F
"Heroes3.exe"+1F373E: 8B 7D 08              -  mov edi,[ebp+08]
"Heroes3.exe"+1F3741: 8D 4E 6C              -  lea ecx,[esi+6C]
"Heroes3.exe"+1F3744: 6A 00                 -  push 00
"Heroes3.exe"+1F3746: C7 45 FC 00 00 00 00  -  mov [ebp-04],00000000
"Heroes3.exe"+1F374D: 8B 57 34              -  mov edx,[edi+34]
"Heroes3.exe"+1F3750: 89 56 60              -  mov [esi+60],edx
// ---------- INJECTING HERE ----------
"Heroes3.exe"+1F3753: 8B 47 4C              -  mov eax,[edi+4C]
"Heroes3.exe"+1F3756: 8A 55 17              -  mov dl,[ebp+17]
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+1F3759: 89 46 64              -  mov [esi+64],eax
"Heroes3.exe"+1F375C: 88 11                 -  mov [ecx],dl
"Heroes3.exe"+1F375E: E8 CD 09 E1 FF        -  call Heroes3.exe+4130
"Heroes3.exe"+1F3763: 8A 45 17              -  mov al,[ebp+17]
"Heroes3.exe"+1F3766: 8D 8E 80 00 00 00     -  lea ecx,[esi+00000080]
"Heroes3.exe"+1F376C: 6A 00                 -  push 00
"Heroes3.exe"+1F376E: C6 45 FC 01           -  mov byte ptr [ebp-04],01
"Heroes3.exe"+1F3772: 88 01                 -  mov [ecx],al
"Heroes3.exe"+1F3774: E8 B7 09 E1 FF        -  call Heroes3.exe+4130
"Heroes3.exe"+1F3779: 8A 4D 14              -  mov cl,[ebp+14]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Нет описания"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>var_char</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"magic btn"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-02
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(magic_btn,Heroes3.exe,F6 46 16 02 0F 84 6A FE FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [esi+16],06
code:
  test byte ptr [esi+16],02
  je Heroes3.exe+1FEB0E
  jmp return

magic_btn:
  jmp newmem
  nop 5
return:
registersymbol(magic_btn)

[DISABLE]

magic_btn:
  db F6 46 16 02 0F 84 6A FE FF FF

unregistersymbol(magic_btn)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+1FEC9A

"Heroes3.exe"+1FEC7D: 39 48 08           -  cmp [eax+08],ecx
"Heroes3.exe"+1FEC80: 0F 85 88 FE FF FF  -  jne Heroes3.exe+1FEB0E
"Heroes3.exe"+1FEC86: 66 8B 50 18        -  mov dx,[eax+18]
"Heroes3.exe"+1FEC8A: 5F                 -  pop edi
"Heroes3.exe"+1FEC8B: 66 89 56 1C        -  mov [esi+1C],dx
"Heroes3.exe"+1FEC8F: 5E                 -  pop esi
"Heroes3.exe"+1FEC90: B8 01 00 00 00     -  mov eax,00000001
"Heroes3.exe"+1FEC95: 5B                 -  pop ebx
"Heroes3.exe"+1FEC96: 5D                 -  pop ebp
"Heroes3.exe"+1FEC97: C2 04 00           -  ret 0004
// ---------- INJECTING HERE ----------
"Heroes3.exe"+1FEC9A: F6 46 16 02        -  test byte ptr [esi+16],02
"Heroes3.exe"+1FEC9E: 0F 84 6A FE FF FF  -  je Heroes3.exe+1FEB0E
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+1FECA4: 8B 7E 04           -  mov edi,[esi+04]
"Heroes3.exe"+1FECA7: 66 8B 48 04        -  mov cx,[eax+04]
"Heroes3.exe"+1FECAB: 66 8B 50 08        -  mov dx,[eax+08]
"Heroes3.exe"+1FECAF: 66 2B 4F 18        -  sub cx,[edi+18]
"Heroes3.exe"+1FECB3: 66 2B 57 1C        -  sub dx,[edi+1C]
"Heroes3.exe"+1FECB7: 66 8B 7E 18        -  mov di,[esi+18]
"Heroes3.exe"+1FECBB: 66 3B CF           -  cmp cx,di
"Heroes3.exe"+1FECBE: 0F 8C 4A FE FF FF  -  jl Heroes3.exe+1FEB0E
"Heroes3.exe"+1FECC4: 66 3B 56 1A        -  cmp dx,[esi+1A]
"Heroes3.exe"+1FECC8: 0F 8C 40 FE FF FF  -  jl Heroes3.exe+1FEB0E
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"resource"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-02
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(resource,Heroes3.exe,81 C1 9C 00 00 00 8B 19) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add ecx,0000009C
  mov dword ptr [ecx+00],#100
  mov dword ptr [ecx+04],#100
  mov dword ptr [ecx+08],#100
  mov dword ptr [ecx+0c],#100
  mov dword ptr [ecx+10],#100
  mov dword ptr [ecx+14],#100
  cmp [ecx+18],186A0
  jg return
  mov dword ptr [ecx+18],#100000
  jmp return

resource:
  jmp newmem
  nop
return:
registersymbol(resource)

[DISABLE]

resource:
  db 81 C1 9C 00 00 00

unregistersymbol(resource)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+6135A

"Heroes3.exe"+61336: 50                    -  push eax
"Heroes3.exe"+61337: 52                    -  push edx
"Heroes3.exe"+61338: E8 B3 01 16 00        -  call Heroes3.exe+1C14F0
"Heroes3.exe"+6133D: A1 DC 77 69 00        -  mov eax,[Heroes3.exe+2977DC]
"Heroes3.exe"+61342: 8B 0D 38 95 69 00     -  mov ecx,[Heroes3.exe+299538]
"Heroes3.exe"+61348: 8D 55 E0              -  lea edx,[ebp-20]
"Heroes3.exe"+6134B: 8D 04 80              -  lea eax,[eax+eax*4]
"Heroes3.exe"+6134E: 8D 04 C0              -  lea eax,[eax+eax*8]
"Heroes3.exe"+61351: 8D 8C C1 D0 0A 02 00  -  lea ecx,[ecx+eax*8+00020AD0]
"Heroes3.exe"+61358: 33 C0                 -  xor eax,eax
// ---------- INJECTING HERE ----------
"Heroes3.exe"+6135A: 81 C1 9C 00 00 00     -  add ecx,0000009C
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+61360: 8B 19                 -  mov ebx,[ecx]
"Heroes3.exe"+61362: 3B 1A                 -  cmp ebx,[edx]
"Heroes3.exe"+61364: 7C 3E                 -  jl Heroes3.exe+613A4
"Heroes3.exe"+61366: 40                    -  inc eax
"Heroes3.exe"+61367: 83 C1 04              -  add ecx,04
"Heroes3.exe"+6136A: 83 C2 04              -  add edx,04
"Heroes3.exe"+6136D: 83 F8 07              -  cmp eax,07
"Heroes3.exe"+61370: 7C EE                 -  jl Heroes3.exe+61360
"Heroes3.exe"+61372: 33 D2                 -  xor edx,edx
"Heroes3.exe"+61374: 8A 97 C0 4E 69 00     -  mov dl,[edi+Heroes3.exe+294EC0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"артефакт"</Description>
      <LastState Value="4294967295" RealAddress="0313B3A0"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Heroes3.exe+298B70</Address>
      <Offsets>
        <Offset>1d4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"mul monster"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-04
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(mul_monster,Heroes3.exe,8B 4D EC 8B 19) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[ebp-14]
  //insert
  push edx
  mov edx,[ecx]
  add [ecx],edx
  pop edx
  //end insert
  mov ebx,[ecx]
  jmp return
temp_var:
  dd 00
mul_monster:
  jmp newmem
return:
registersymbol(mul_monster)

[DISABLE]

mul_monster:
  db 8B 4D EC 8B 19

unregistersymbol(mul_monster)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+12F617

"Heroes3.exe"+12F5FB: 8D 55 D4                          -  lea edx,[ebp-2C]
"Heroes3.exe"+12F5FE: 52                                -  push edx
"Heroes3.exe"+12F5FF: 6A 01                             -  push 01
"Heroes3.exe"+12F601: 50                                -  push eax
"Heroes3.exe"+12F602: E8 C9 EC 0C 00                    -  call Heroes3.exe+1FE2D0
"Heroes3.exe"+12F607: 8B 45 08                          -  mov eax,[ebp+08]
"Heroes3.exe"+12F60A: 83 B8 0E 01 00 00 02              -  cmp dword ptr [eax+0000010E],02
"Heroes3.exe"+12F611: 7C 04                             -  jl Heroes3.exe+12F617
"Heroes3.exe"+12F613: 33 DB                             -  xor ebx,ebx
"Heroes3.exe"+12F615: EB 05                             -  jmp Heroes3.exe+12F61C
// ---------- INJECTING HERE ----------
"Heroes3.exe"+12F617: 8B 4D EC                          -  mov ecx,[ebp-14]
"Heroes3.exe"+12F61A: 8B 19                             -  mov ebx,[ecx]
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+12F61C: 8D 4D 9C                          -  lea ecx,[ebp-64]
"Heroes3.exe"+12F61F: C7 85 48 FF FF FF 14 BB 63 00     -  mov [ebp-000000B8],Heroes3.exe+23BB14
"Heroes3.exe"+12F629: E8 62 1C F2 FF                    -  call Heroes3.exe+51290
"Heroes3.exe"+12F62E: 8B 4D E0                          -  mov ecx,[ebp-20]
"Heroes3.exe"+12F631: C7 45 9C F0 56 64 00              -  mov [ebp-64],Heroes3.exe+2456F0
"Heroes3.exe"+12F638: 83 C9 02                          -  or ecx,02
"Heroes3.exe"+12F63B: 89 4D E0                          -  mov [ebp-20],ecx
"Heroes3.exe"+12F63E: 8B 95 48 FF FF FF                 -  mov edx,[ebp-000000B8]
"Heroes3.exe"+12F644: 8D 8D 4C FF FF FF                 -  lea ecx,[ebp-000000B4]
"Heroes3.exe"+12F64A: 6A 00                             -  push 00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"experience"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-02
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(exp,Heroes3.exe,8B 52 51 52 51) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  add dword ptr [edx+51],#10000
code:
  mov edx,[edx+51]
  push edx
  push ecx
  jmp return

exp:
  jmp newmem
return:
registersymbol(exp)

[DISABLE]

exp:
  db 8B 52 51 52 51

unregistersymbol(exp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+DDBAE

"Heroes3.exe"+DDB8D: DD 45 E4                 -  fld qword ptr [ebp-1C]
"Heroes3.exe"+DDB90: DC 0D 20 AC 63 00        -  fmul qword ptr [Heroes3.exe+23AC20]
"Heroes3.exe"+DDB96: E8 F9 A3 13 00           -  call Heroes3.exe+217F94
"Heroes3.exe"+DDB9B: 03 F0                    -  add esi,eax
"Heroes3.exe"+DDB9D: 4F                       -  dec edi
"Heroes3.exe"+DDB9E: 89 45 08                 -  mov [ebp+08],eax
"Heroes3.exe"+DDBA1: 75 E4                    -  jne Heroes3.exe+DDB87
"Heroes3.exe"+DDBA3: 8B 45 F0                 -  mov eax,[ebp-10]
"Heroes3.exe"+DDBA6: 8B CE                    -  mov ecx,esi
"Heroes3.exe"+DDBA8: 8B 15 70 8B 69 00        -  mov edx,[Heroes3.exe+298B70]
// ---------- INJECTING HERE ----------
"Heroes3.exe"+DDBAE: 8B 52 51                 -  mov edx,[edx+51]
"Heroes3.exe"+DDBB1: 52                       -  push edx
"Heroes3.exe"+DDBB2: 51                       -  push ecx
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+DDBB3: 50                       -  push eax
"Heroes3.exe"+DDBB4: A1 C4 5D 6A 00           -  mov eax,[Heroes3.exe+2A5DC4]
"Heroes3.exe"+DDBB9: 8B 48 20                 -  mov ecx,[eax+20]
"Heroes3.exe"+DDBBC: 8B 51 0C                 -  mov edx,[ecx+0C]
"Heroes3.exe"+DDBBF: 52                       -  push edx
"Heroes3.exe"+DDBC0: 68 28 74 69 00           -  push Heroes3.exe+297428
"Heroes3.exe"+DDBC5: E8 14 9E 13 00           -  call Heroes3.exe+2179DE
"Heroes3.exe"+DDBCA: 83 C4 14                 -  add esp,14
"Heroes3.exe"+DDBCD: E9 72 FE FF FF           -  jmp Heroes3.exe+DDA44
"Heroes3.exe"+DDBD2: 8D 78 BC                 -  lea edi,[eax-44]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"all magic"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heroes3.exe
  Version: 
  Date   : 2020-03-03
  Author : Hipp

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(all_magic,Heroes3.exe,8A 84 39 30 04 00 00 84 C0 74) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [ecx+edi+00000430],01
code:
  mov al,[ecx+edi+00000430]
  jmp return

all_magic:
  jmp newmem
  nop 2
return:
registersymbol(all_magic)

[DISABLE]

all_magic:
  db 8A 84 39 30 04 00 00

unregistersymbol(all_magic)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heroes3.exe"+19CD5B

"Heroes3.exe"+19CD3D: 8D 4D BC              -  lea ecx,[ebp-44]
"Heroes3.exe"+19CD40: 89 45 C8              -  mov [ebp-38],eax
"Heroes3.exe"+19CD43: E8 D8 78 E9 FF        -  call Heroes3.exe+34620
"Heroes3.exe"+19CD48: 8D 0C 40              -  lea ecx,[eax+eax*2]
"Heroes3.exe"+19CD4B: 89 7D C0              -  mov [ebp-40],edi
"Heroes3.exe"+19CD4E: 8D 14 8F              -  lea edx,[edi+ecx*4]
"Heroes3.exe"+19CD51: 33 FF                 -  xor edi,edi
"Heroes3.exe"+19CD53: 89 55 C4              -  mov [ebp-3C],edx
"Heroes3.exe"+19CD56: 33 DB                 -  xor ebx,ebx
"Heroes3.exe"+19CD58: 8B 4E 64              -  mov ecx,[esi+64]
// ---------- INJECTING HERE ----------
"Heroes3.exe"+19CD5B: 8A 84 39 30 04 00 00  -  mov al,[ecx+edi+00000430]
// ---------- DONE INJECTING  ----------
"Heroes3.exe"+19CD62: 84 C0                 -  test al,al
"Heroes3.exe"+19CD64: 74 50                 -  je Heroes3.exe+19CDB6
"Heroes3.exe"+19CD66: 8B 15 A8 7F 68 00     -  mov edx,[Heroes3.exe+287FA8]
"Heroes3.exe"+19CD6C: 8B 44 13 1C           -  mov eax,[ebx+edx+1C]
"Heroes3.exe"+19CD70: 85 46 70              -  test [esi+70],eax
"Heroes3.exe"+19CD73: 74 41                 -  je Heroes3.exe+19CDB6
"Heroes3.exe"+19CD75: 8B 54 13 0C           -  mov edx,[ebx+edx+0C]
"Heroes3.exe"+19CD79: 85 56 74              -  test [esi+74],edx
"Heroes3.exe"+19CD7C: 74 38                 -  je Heroes3.exe+19CDB6
"Heroes3.exe"+19CD7E: 50                    -  push eax
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="безымянная структура" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="31" DisplayMethod="Целое без знака"/>
        <Element Offset="124" Vartype="Pointer" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="148" Vartype="4 Bytes" Bytesize="4" RLECount="34" DisplayMethod="Целое без знака"/>
        <Element Offset="284" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="304" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="320" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="356" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="364" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="368" Vartype="Pointer" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" RLECount="198" DisplayMethod="Целое без знака"/>
        <Element Offset="1184" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="1192" Vartype="4 Bytes" Bytesize="4" RLECount="71" DisplayMethod="Целое без знака"/>
        <Element Offset="1476" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1484" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="1500" Vartype="4 Bytes" Bytesize="4" RLECount="52" DisplayMethod="Целое без знака"/>
        <Element Offset="1708" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1716" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1720" Vartype="Pointer" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="1744" Vartype="4 Bytes" Bytesize="4" RLECount="167" DisplayMethod="Целое без знака"/>
        <Element Offset="2412" Vartype="Pointer" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="2448" Vartype="4 Bytes" Bytesize="4" RLECount="22" DisplayMethod="Целое без знака"/>
        <Element Offset="2536" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="2552" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="2828" Vartype="Pointer" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="2852" Vartype="4 Bytes" Bytesize="4" RLECount="34" DisplayMethod="Целое без знака"/>
        <Element Offset="2988" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3004" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3008" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="3060" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="3068" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3072" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="3084" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3088" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="3096" Vartype="4 Bytes" Bytesize="4" RLECount="198" DisplayMethod="Целое без знака"/>
        <Element Offset="3888" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="3896" Vartype="4 Bytes" Bytesize="4" RLECount="50" DisplayMethod="Целое без знака"/>
      </Elements>
    </Structure>
    <Structure Name="герой" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="20" DisplayMethod="Целое без знака"/>
        <Element Offset="81" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Целое без знака"/>
        <Element Offset="124" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="132" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="136" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="148" Vartype="4 Bytes" Bytesize="4" RLECount="52" DisplayMethod="Целое без знака"/>
        <Element Offset="356" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="360" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="368" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="380" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="384" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" RLECount="167" DisplayMethod="Целое без знака"/>
        <Element Offset="1060" Vartype="Pointer" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="1096" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Целое без знака"/>
        <Element Offset="1142" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1156" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Целое без знака"/>
        <Element Offset="1184" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="1192" Vartype="4 Bytes" Bytesize="4" RLECount="71" DisplayMethod="Целое без знака"/>
        <Element Offset="1476" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1484" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="1500" Vartype="4 Bytes" Bytesize="4" RLECount="34" DisplayMethod="Целое без знака"/>
        <Element Offset="1636" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1652" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1656" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1672" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="1708" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1716" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1720" Vartype="Pointer" Bytesize="4" RLECount="6" DisplayMethod="Целое без знака"/>
        <Element Offset="1744" Vartype="4 Bytes" Bytesize="4" RLECount="175" DisplayMethod="Целое без знака"/>
        <Element Offset="2444" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2448" Vartype="4 Bytes" Bytesize="4" RLECount="22" DisplayMethod="Целое без знака"/>
        <Element Offset="2536" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="2552" Vartype="4 Bytes" Bytesize="4" RLECount="69" DisplayMethod="Целое без знака"/>
        <Element Offset="2828" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="2836" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2840" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="2852" Vartype="4 Bytes" Bytesize="4" RLECount="34" DisplayMethod="Целое без знака"/>
        <Element Offset="2988" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3004" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3008" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="3060" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="3068" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3072" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="3084" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3088" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="3096" Vartype="4 Bytes" Bytesize="4" RLECount="198" DisplayMethod="Целое без знака"/>
        <Element Offset="3888" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="3896" Vartype="4 Bytes" Bytesize="4" RLECount="50" DisplayMethod="Целое без знака"/>
      </Elements>
    </Structure>
    <Structure Name="heroes" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="24" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Целое без знака"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Целое без знака"/>
        <Element Offset="60" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="64" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Целое без знака"/>
        <Element Offset="120" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="124" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="140" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="144" Vartype="4 Bytes" Bytesize="4" RLECount="14" DisplayMethod="Целое без знака"/>
        <Element Offset="200" Vartype="Pointer" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="212" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="216" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="220" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="228" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="236" Vartype="4 Bytes" Bytesize="4" RLECount="195" DisplayMethod="Целое без знака"/>
        <Element Offset="1016" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1024" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака">
          <Structure Name="Автоматически создано из 01000000" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="254" DisplayMethod="Целое без знака"/>
              <Element Offset="1016" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="1020" Vartype="4 Bytes" Bytesize="4" RLECount="160" DisplayMethod="Целое без знака"/>
              <Element Offset="1660" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="1664" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="1668" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="1672" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="1684" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="1688" Vartype="4 Bytes" Bytesize="4" RLECount="160" DisplayMethod="Целое без знака"/>
              <Element Offset="2328" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2332" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2336" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2340" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="2352" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2356" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="2368" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2372" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2376" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="2380" Vartype="4 Bytes" Bytesize="4" RLECount="154" DisplayMethod="Целое без знака"/>
              <Element Offset="2996" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3000" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3004" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3008" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="3020" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="3036" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3040" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3044" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3048" Vartype="4 Bytes" Bytesize="4" RLECount="154" DisplayMethod="Целое без знака"/>
              <Element Offset="3664" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3668" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3672" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3676" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="3688" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3692" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Целое без знака"/>
              <Element Offset="3704" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3708" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3712" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
              <Element Offset="3716" Vartype="4 Bytes" Bytesize="4" RLECount="95" DisplayMethod="Целое без знака"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="1028" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1036" Vartype="Pointer" Bytesize="4" RLECount="5" DisplayMethod="Целое без знака"/>
        <Element Offset="1056" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1064" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1068" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1072" Vartype="Pointer" Bytesize="4" RLECount="18" DisplayMethod="Целое без знака"/>
        <Element Offset="1144" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1152" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1160" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Целое без знака"/>
        <Element Offset="1228" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1232" Vartype="4 Bytes" Bytesize="4" RLECount="20" DisplayMethod="Целое без знака"/>
        <Element Offset="1312" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1320" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Целое без знака"/>
        <Element Offset="1340" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="1348" Vartype="4 Bytes" Bytesize="4" RLECount="36" DisplayMethod="Целое без знака"/>
        <Element Offset="1492" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1496" Vartype="4 Bytes" Bytesize="4" RLECount="11" DisplayMethod="Целое без знака"/>
        <Element Offset="1540" Vartype="Float" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1544" Vartype="4 Bytes" Bytesize="4" RLECount="19" DisplayMethod="Целое без знака"/>
        <Element Offset="1620" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="1624" Vartype="4 Bytes" Bytesize="4" RLECount="131" DisplayMethod="Целое без знака"/>
        <Element Offset="2148" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2152" Vartype="4 Bytes" Bytesize="4" RLECount="40" DisplayMethod="Целое без знака"/>
        <Element Offset="2312" Vartype="Double" Bytesize="8" DisplayMethod="Целое без знака"/>
        <Element Offset="2320" Vartype="Unicode String" Bytesize="9" DisplayMethod="Целое без знака"/>
        <Element Offset="2329" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="2332" Vartype="String" Bytesize="5" DisplayMethod="Целое без знака"/>
        <Element Offset="2337" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Целое без знака"/>
        <Element Offset="2340" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2356" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2360" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2364" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="2368" Vartype="4 Bytes" Bytesize="4" RLECount="44" DisplayMethod="Целое без знака"/>
        <Element Offset="2544" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="2552" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Целое без знака"/>
        <Element Offset="2572" Vartype="Pointer" Bytesize="4" RLECount="2" DisplayMethod="Целое без знака"/>
        <Element Offset="2580" Vartype="4 Bytes" Bytesize="4" RLECount="225" DisplayMethod="Целое без знака"/>
        <Element Offset="3480" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3484" Vartype="4 Bytes" Bytesize="4" RLECount="12" DisplayMethod="Целое без знака"/>
        <Element Offset="3532" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3536" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Целое без знака"/>
        <Element Offset="3568" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3572" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Целое без знака"/>
        <Element Offset="3592" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3596" Vartype="4 Bytes" Bytesize="4" RLECount="21" DisplayMethod="Целое без знака"/>
        <Element Offset="3680" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3684" Vartype="4 Bytes" Bytesize="4" RLECount="23" DisplayMethod="Целое без знака"/>
        <Element Offset="3776" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3780" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3796" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3800" Vartype="4 Bytes" Bytesize="4" RLECount="40" DisplayMethod="Целое без знака"/>
        <Element Offset="3960" Vartype="Pointer" Bytesize="4" DisplayMethod="Целое без знака"/>
        <Element Offset="3964" Vartype="4 Bytes" Bytesize="4" RLECount="33" DisplayMethod="Целое без знака"/>
      </Elements>
    </Structure>
  </Structures>
  <Comments>h3wog.exe+63AA2 - mov al,[eax+00000478] - к.сила перед боем
h3wog.exe+E5BDB - mov dl,[esi+ecx+00000476]
h3wog.exe+80AAC - mov [esi+4D],edx - уменьшение хода при движении в том числе и у врагов
</Comments>
</CheatTable>
